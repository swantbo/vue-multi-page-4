<!DOCTYPE html>
<html lang="en">
<head>
https://blog.csdn.net/u012210379/article/details/52871214
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

    <meta name="viewport" content="user-scalable=no">

    <script type="text/javascript" src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>

    <title>微信支付测试</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

    <meta name="viewport" content="user-scalable=no">



</head>
<body>

    

    <script>

        var prepay_id = document.getElementById("prepay_id").value;
        var configtimeStamp = document.getElementById("configtimeStamp").value;
        var timeStamp = document.getElementById("timeStamp").value;
        var nonceStr = document.getElementById("nonceStr").value;
        var paySign = document.getElementById("paySign").value;
        var signature = document.getElementById("signature").value;

        var appId = document.getElementById("appId").value;

        wx.config({
            debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
            appId: appId, // 必填，公众号的唯一标识
            timestamp: configtimeStamp, // 必填，生成签名的时间戳
            nonceStr: nonceStr, // 必填，生成签名的随机串
            signature: signature,// 必填，签名
            jsApiList: ['chooseWXPay'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
        });

        wx.ready(function () {
            // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。

            wx.chooseWXPay({
                timestamp: timeStamp, // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符
                nonceStr: nonceStr, // 支付签名随机串，不长于 32 位
                package: "prepay_id=" + prepay_id, // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）
                signType: 'MD5', // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'
                paySign: paySign, // 支付签名
                success: function (res) {
                    // 支付成功后的回调函数
                    alert("支付成功" + JSON.stringify(res));
                    location.href = "http://www.rollingbear.cn/wx_shop_cart/cart?showAll=1";
                },
                fail: function (res) {
                    console.log("支付失败-----" + res);
                    alert("支付失败" + JSON.stringify(res));
                },
                cancel: function (res) {
                    alert("用户取消支付");
                    location.href = "http://www.rollingbear.cn/wx_shop_cart/cart";
                }
            });
        });

        wx.error(function (res) {
            // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
            alert("wx config失败" + JSON.stringify(res));
        });


    </script>
</body>
</html>